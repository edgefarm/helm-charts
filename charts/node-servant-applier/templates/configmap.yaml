apiVersion: v1
kind: ConfigMap
metadata:
  name: node-convert-script
  namespace: kube-system
data:
  run.sh: |-
    #!/bin/sh
    set -e
    apk add curl jq
    TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
    /usr/local/bin/entry.sh convert --working-mode=${WORKING_MODE} --yurthub-image=${YURTHUB_IMAGE} --join-token=${JOIN_TOKEN} --enable-dummy-if=true --enable-node-pool=true
    API_SERVER=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS
    curl -k -X PATCH $API_SERVER/api/v1/nodes/$NODE_NAME -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/merge-patch+json" --data "{\"metadata\":{\"labels\":{\"node.edgefarm.io/converted\":\"true\",\"node.edgefarm.io/to-be-converted\":\"false\"}}}"
    PODS_ON_NODE=$(curl -s -k -H "Authorization: Bearer $API_TOKEN" "$API_SERVER/api/v1/pods?fieldSelector=spec.nodeName=$NODE_NAME" | jq -r '.items[] | "\(.metadata.namespace) \(.metadata.name)"')
    
    echo "$PODS_ON_NODE" | while IFS= read -r POD; do
        NAMESPACE=$(echo "$POD" | awk '{print $1}')
        POD_NAME=$(echo "$POD" | awk '{print $2}')
    
        if [[ $POD_NAME == *"node-servant-applier-"* ]]; then
        continue
        fi
        if [[ $POD_NAME == *"node-servant-convert-"* ]]; then
        continue
        fi
        if [[ $POD_NAME == *"yurt-hub-"* ]]; then
        continue
        fi
        curl -k -X DELETE -H "Authorization: Bearer $API_TOKEN" "$API_SERVER/api/v1/namespaces/$NAMESPACE/pods/$POD_NAME"
    done