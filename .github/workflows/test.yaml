# based on: https://github.com/helm/charts-repo-actions-demo/blob/main/.github/workflows/lint-test.yaml
name: test

on:
  push:
    branches:
      - main
    paths:
      - "helm/charts/**"
      - "!helm/charts/index.yaml"
      - ".github/workflows/test.yaml"
  pull_request:
    paths:
      - "helm/charts/**"
      - "!helm/charts/index.yaml"
      - ".github/workflows/test.yaml"

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k8s:
          - "1.23"
          - "1.22"
          - "1.21"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.2.1

      - name: Run chart-testing (lint)
        run: |-
          ct lint \
            --all \
            --chart-dirs helm/charts \
            --validate-maintainers=false

      - name: Create k8s cluster
        run: |-
          sudo snap install microk8s --channel="${{ matrix.k8s }}/stable" --classic
          sudo microk8s.enable dns
          sudo microk8s.enable storage
          sudo microk8s.kubectl wait --for=condition=ready --timeout=60s node --all
          sudo microk8s.kubectl wait --for=condition=ready --timeout=120s --namespace=kube-system pod --all
          mkdir -p ~/.kube
          sudo microk8s.config > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: create kubeedge-ca
        run: |
          #!/bin/bash
          set -e
          mkdir certs
          cd certs
          curl -JLO "https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-linux-amd64"
          chmod +x mkcert-v*-linux-amd64
          CAROOT=$(pwd) ./mkcert-v1.4.4-linux-amd64 -client -cert-file server.crt  -key-file server.key "*.nip.io" "*.kubeedge.svc.cluster.local" 
          sudo microk8s.kubectl create namespace kubeedge 
          sudo microk8s.kubectl -n kubeedge create secret tls kubeedge-ca --cert=rootCA.pem --key=rootCA-key.pem
          sudo microk8s.kubectl -n kubeedge create secret generic kubeedge-certs --from-file=server.crt --from-file=server.key

      - name: Run chart-testing (install)
        run: |-
          ct install \
            --chart-dirs helm/charts \
            --all
